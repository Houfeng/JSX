// THIS FILE IS AUTOMATICALLY GENERATED.
/**

Document Object Model Events

Specification:
    http://www.w3.org/TR/DOM-Level-3-Events/
*/

import "./dom.jsx";
import "./views.jsx";

/*
automatically generated from:
	http://www.w3.org/TR/DOM-Level-3-Events/
	idl2jsx/extra/events.idl
*/
native class EventException {

	// EventExceptionCode
	static const     UNSPECIFIED_EVENT_TYPE_ERR : int/*unsigned short*/;
	__readonly__ var UNSPECIFIED_EVENT_TYPE_ERR : int/*unsigned short*/;
	// Introduced in DOM Level 3:
	static const     DISPATCH_REQUEST_ERR : int/*unsigned short*/;
	__readonly__ var DISPATCH_REQUEST_ERR : int/*unsigned short*/;
	// Introduced in DOM Level 2:
	var code : int/*unsigned short*/;

	// EventExceptionCode
	// Introduced in DOM Level 3:

} // end of EventException

native class UIEvent extends Event {

	__readonly__ var view : AbstractView;
	__readonly__ var detail : int/*long*/;
	function initUIEvent(
		typeArg : string/*DOMString*/,
		canBubbleArg : boolean,
		cancelableArg : boolean,
		viewArg : AbstractView,
		detailArg : int/*long*/
	) : void;


} // end of UIEvent

native class FocusEvent extends UIEvent {

	__readonly__ var relatedTarget : EventTarget;
	function initFocusEvent(
		typeArg : string/*DOMString*/,
		canBubbleArg : boolean,
		cancelableArg : boolean,
		viewArg : AbstractView,
		detailArg : int/*long*/,
		relatedTargetArg : EventTarget
	) : void;


} // end of FocusEvent

native class MouseEvent extends UIEvent {

	__readonly__ var screenX : int/*long*/;
	__readonly__ var screenY : int/*long*/;
	__readonly__ var clientX : int/*long*/;
	__readonly__ var clientY : int/*long*/;
	__readonly__ var ctrlKey : boolean;
	__readonly__ var shiftKey : boolean;
	__readonly__ var altKey : boolean;
	__readonly__ var metaKey : boolean;
	__readonly__ var button : int/*unsigned short*/;
	__readonly__ var buttons : int/*unsigned short*/;
	__readonly__ var relatedTarget : EventTarget;
	function initMouseEvent(
		typeArg : string/*DOMString*/,
		canBubbleArg : boolean,
		cancelableArg : boolean,
		viewArg : AbstractView,
		detailArg : int/*long*/,
		screenXArg : int/*long*/,
		screenYArg : int/*long*/,
		clientXArg : int/*long*/,
		clientYArg : int/*long*/,
		ctrlKeyArg : boolean,
		altKeyArg : boolean,
		shiftKeyArg : boolean,
		metaKeyArg : boolean,
		buttonArg : int/*unsigned short*/,
		relatedTargetArg : EventTarget
	) : void;
	// Introduced in DOM Level 3:
	function getModifierState(keyArg : string/*DOMString*/) : boolean;

	// Introduced in DOM Level 3:

} // end of MouseEvent

native class WheelEvent extends MouseEvent {

	// DeltaModeCode
	static const     DOM_DELTA_PIXEL : int/*unsigned long*/;
	__readonly__ var DOM_DELTA_PIXEL : int/*unsigned long*/;
	static const     DOM_DELTA_LINE : int/*unsigned long*/;
	__readonly__ var DOM_DELTA_LINE : int/*unsigned long*/;
	static const     DOM_DELTA_PAGE : int/*unsigned long*/;
	__readonly__ var DOM_DELTA_PAGE : int/*unsigned long*/;
	__readonly__ var deltaX : number/*float*/;
	__readonly__ var deltaY : number/*float*/;
	__readonly__ var deltaZ : number/*float*/;
	__readonly__ var deltaMode : int/*unsigned long*/;
	function initWheelEvent(
		typeArg : string/*DOMString*/,
		canBubbleArg : boolean,
		cancelableArg : boolean,
		viewArg : AbstractView,
		detailArg : int/*long*/,
		screenXArg : int/*long*/,
		screenYArg : int/*long*/,
		clientXArg : int/*long*/,
		clientYArg : int/*long*/,
		buttonArg : int/*unsigned short*/,
		relatedTargetArg : EventTarget,
		modifiersListArg : string/*DOMString*/,
		deltaXArg : number/*float*/,
		deltaYArg : number/*float*/,
		deltaZArg : number/*float*/,
		deltaMode : int/*unsigned long*/
	) : void;

	// DeltaModeCode

} // end of WheelEvent

native class TextEvent extends UIEvent {

	// InputMethodCode
	static const     DOM_INPUT_METHOD_UNKNOWN : int/*unsigned long*/;
	__readonly__ var DOM_INPUT_METHOD_UNKNOWN : int/*unsigned long*/;
	static const     DOM_INPUT_METHOD_KEYBOARD : int/*unsigned long*/;
	__readonly__ var DOM_INPUT_METHOD_KEYBOARD : int/*unsigned long*/;
	static const     DOM_INPUT_METHOD_PASTE : int/*unsigned long*/;
	__readonly__ var DOM_INPUT_METHOD_PASTE : int/*unsigned long*/;
	static const     DOM_INPUT_METHOD_DROP : int/*unsigned long*/;
	__readonly__ var DOM_INPUT_METHOD_DROP : int/*unsigned long*/;
	static const     DOM_INPUT_METHOD_IME : int/*unsigned long*/;
	__readonly__ var DOM_INPUT_METHOD_IME : int/*unsigned long*/;
	static const     DOM_INPUT_METHOD_OPTION : int/*unsigned long*/;
	__readonly__ var DOM_INPUT_METHOD_OPTION : int/*unsigned long*/;
	static const     DOM_INPUT_METHOD_HANDWRITING : int/*unsigned long*/;
	__readonly__ var DOM_INPUT_METHOD_HANDWRITING : int/*unsigned long*/;
	static const     DOM_INPUT_METHOD_VOICE : int/*unsigned long*/;
	__readonly__ var DOM_INPUT_METHOD_VOICE : int/*unsigned long*/;
	static const     DOM_INPUT_METHOD_MULTIMODAL : int/*unsigned long*/;
	__readonly__ var DOM_INPUT_METHOD_MULTIMODAL : int/*unsigned long*/;
	static const     DOM_INPUT_METHOD_SCRIPT : int/*unsigned long*/;
	__readonly__ var DOM_INPUT_METHOD_SCRIPT : int/*unsigned long*/;
	__readonly__ var data : string/*DOMString*/;
	__readonly__ var inputMethod : int/*unsigned long*/;
	__readonly__ var locale : string/*DOMString*/;
	function initTextEvent(
		typeArg : string/*DOMString*/,
		canBubbleArg : boolean,
		cancelableArg : boolean,
		viewArg : AbstractView,
		dataArg : string/*DOMString*/,
		inputMethod : int/*unsigned long*/,
		localeArg : string/*DOMString*/
	) : void;

	// InputMethodCode

} // end of TextEvent

native class KeyboardEvent extends UIEvent {

	// KeyLocationCode
	static const     DOM_KEY_LOCATION_STANDARD : int/*unsigned long*/;
	__readonly__ var DOM_KEY_LOCATION_STANDARD : int/*unsigned long*/;
	static const     DOM_KEY_LOCATION_LEFT : int/*unsigned long*/;
	__readonly__ var DOM_KEY_LOCATION_LEFT : int/*unsigned long*/;
	static const     DOM_KEY_LOCATION_RIGHT : int/*unsigned long*/;
	__readonly__ var DOM_KEY_LOCATION_RIGHT : int/*unsigned long*/;
	static const     DOM_KEY_LOCATION_NUMPAD : int/*unsigned long*/;
	__readonly__ var DOM_KEY_LOCATION_NUMPAD : int/*unsigned long*/;
	static const     DOM_KEY_LOCATION_MOBILE : int/*unsigned long*/;
	__readonly__ var DOM_KEY_LOCATION_MOBILE : int/*unsigned long*/;
	static const     DOM_KEY_LOCATION_JOYSTICK : int/*unsigned long*/;
	__readonly__ var DOM_KEY_LOCATION_JOYSTICK : int/*unsigned long*/;
	__readonly__ var char : string/*DOMString*/;
	__readonly__ var key : string/*DOMString*/;
	__readonly__ var location : int/*unsigned long*/;
	__readonly__ var ctrlKey : boolean;
	__readonly__ var shiftKey : boolean;
	__readonly__ var altKey : boolean;
	__readonly__ var metaKey : boolean;
	__readonly__ var repeat : boolean;
	__readonly__ var locale : string/*DOMString*/;
	function getModifierState(keyArg : string/*DOMString*/) : boolean;
	function initKeyboardEvent(
		typeArg : string/*DOMString*/,
		canBubbleArg : boolean,
		cancelableArg : boolean,
		viewArg : AbstractView,
		charArg : string/*DOMString*/,
		keyArg : string/*DOMString*/,
		locationArg : int/*unsigned long*/,
		modifiersListArg : string/*DOMString*/,
		repeat : boolean,
		localeArg : string/*DOMString*/
	) : void;

	__readonly__ var charCode : int/*unsigned long*/;
	__readonly__ var keyCode : int/*unsigned long*/;
	__readonly__ var which : int/*unsigned long*/;

	// KeyLocationCode

} // end of KeyboardEvent

native class CompositionEvent extends UIEvent {

	__readonly__ var data : string/*DOMString*/;
	__readonly__ var locale : string/*DOMString*/;
	function initCompositionEvent(
		typeArg : string/*DOMString*/,
		canBubbleArg : boolean,
		cancelableArg : boolean,
		viewArg : AbstractView,
		dataArg : string/*DOMString*/,
		localeArg : string/*DOMString*/
	) : void;


} // end of CompositionEvent

native class MutationEvent extends Event {

	// attrChangeType
	static const     MODIFICATION : int/*unsigned short*/;
	__readonly__ var MODIFICATION : int/*unsigned short*/;
	static const     ADDITION : int/*unsigned short*/;
	__readonly__ var ADDITION : int/*unsigned short*/;
	static const     REMOVAL : int/*unsigned short*/;
	__readonly__ var REMOVAL : int/*unsigned short*/;
	__readonly__ var relatedNode : Node;
	__readonly__ var prevValue : string/*DOMString*/;
	__readonly__ var newValue : string/*DOMString*/;
	__readonly__ var attrName : string/*DOMString*/;
	__readonly__ var attrChange : int/*unsigned short*/;
	function initMutationEvent(
		typeArg : string/*DOMString*/,
		canBubbleArg : boolean,
		cancelableArg : boolean,
		relatedNodeArg : Node,
		prevValueArg : string/*DOMString*/,
		newValueArg : string/*DOMString*/,
		attrNameArg : string/*DOMString*/,
		attrChangeArg : int/*unsigned short*/
	) : void;

	// attrChangeType

} // end of MutationEvent

native class MutationNameEvent extends MutationEvent {

	__readonly__ var prevNamespaceURI : string/*DOMString*/;
	__readonly__ var prevNodeName : string/*DOMString*/;
	// Introduced in DOM Level 3:
	function initMutationNameEvent(
		typeArg : string/*DOMString*/,
		canBubbleArg : boolean,
		cancelableArg : boolean,
		relatedNodeArg : Node,
		prevNamespaceURIArg : string/*DOMString*/,
		prevNodeNameArg : string/*DOMString*/
	) : void;

	// Introduced in DOM Level 3:

} // end of MutationNameEvent

native class UIEventInit extends EventInit {
}

native class MouseEventInit extends UIEventInit {
}

/*
end of generated files from:
	http://www.w3.org/TR/DOM-Level-3-Events/
	idl2jsx/extra/events.idl
*/

