// THIS FILE IS AUTOMATICALLY GENERATED.
/**

Document Object Model Level 4 Core

Specification:
    http://www.w3.org/TR/dom/
*/

/*
automatically generated from:
	http://www.w3.org/TR/dom/
*/
native class DOMException {

	static const     INDEX_SIZE_ERR : int/*unsigned short*/;
	__readonly__ var INDEX_SIZE_ERR : int/*unsigned short*/;
	static const     DOMSTRING_SIZE_ERR : int/*unsigned short*/;
	__readonly__ var DOMSTRING_SIZE_ERR : int/*unsigned short*/;
	// historical
	static const     HIERARCHY_REQUEST_ERR : int/*unsigned short*/;
	__readonly__ var HIERARCHY_REQUEST_ERR : int/*unsigned short*/;
	static const     WRONG_DOCUMENT_ERR : int/*unsigned short*/;
	__readonly__ var WRONG_DOCUMENT_ERR : int/*unsigned short*/;
	static const     INVALID_CHARACTER_ERR : int/*unsigned short*/;
	__readonly__ var INVALID_CHARACTER_ERR : int/*unsigned short*/;
	static const     NO_DATA_ALLOWED_ERR : int/*unsigned short*/;
	__readonly__ var NO_DATA_ALLOWED_ERR : int/*unsigned short*/;
	// historical
	static const     NO_MODIFICATION_ALLOWED_ERR : int/*unsigned short*/;
	__readonly__ var NO_MODIFICATION_ALLOWED_ERR : int/*unsigned short*/;
	static const     NOT_FOUND_ERR : int/*unsigned short*/;
	__readonly__ var NOT_FOUND_ERR : int/*unsigned short*/;
	static const     NOT_SUPPORTED_ERR : int/*unsigned short*/;
	__readonly__ var NOT_SUPPORTED_ERR : int/*unsigned short*/;
	static const     INUSE_ATTRIBUTE_ERR : int/*unsigned short*/;
	__readonly__ var INUSE_ATTRIBUTE_ERR : int/*unsigned short*/;
	// historical
	static const     INVALID_STATE_ERR : int/*unsigned short*/;
	__readonly__ var INVALID_STATE_ERR : int/*unsigned short*/;
	static const     SYNTAX_ERR : int/*unsigned short*/;
	__readonly__ var SYNTAX_ERR : int/*unsigned short*/;
	static const     INVALID_MODIFICATION_ERR : int/*unsigned short*/;
	__readonly__ var INVALID_MODIFICATION_ERR : int/*unsigned short*/;
	static const     NAMESPACE_ERR : int/*unsigned short*/;
	__readonly__ var NAMESPACE_ERR : int/*unsigned short*/;
	static const     INVALID_ACCESS_ERR : int/*unsigned short*/;
	__readonly__ var INVALID_ACCESS_ERR : int/*unsigned short*/;
	static const     VALIDATION_ERR : int/*unsigned short*/;
	__readonly__ var VALIDATION_ERR : int/*unsigned short*/;
	// historical
	static const     TYPE_MISMATCH_ERR : int/*unsigned short*/;
	__readonly__ var TYPE_MISMATCH_ERR : int/*unsigned short*/;
	static const     SECURITY_ERR : int/*unsigned short*/;
	__readonly__ var SECURITY_ERR : int/*unsigned short*/;
	static const     NETWORK_ERR : int/*unsigned short*/;
	__readonly__ var NETWORK_ERR : int/*unsigned short*/;
	static const     ABORT_ERR : int/*unsigned short*/;
	__readonly__ var ABORT_ERR : int/*unsigned short*/;
	static const     URL_MISMATCH_ERR : int/*unsigned short*/;
	__readonly__ var URL_MISMATCH_ERR : int/*unsigned short*/;
	static const     QUOTA_EXCEEDED_ERR : int/*unsigned short*/;
	__readonly__ var QUOTA_EXCEEDED_ERR : int/*unsigned short*/;
	static const     TIMEOUT_ERR : int/*unsigned short*/;
	__readonly__ var TIMEOUT_ERR : int/*unsigned short*/;
	static const     INVALID_NODE_TYPE_ERR : int/*unsigned short*/;
	__readonly__ var INVALID_NODE_TYPE_ERR : int/*unsigned short*/;
	static const     DATA_CLONE_ERR : int/*unsigned short*/;
	__readonly__ var DATA_CLONE_ERR : int/*unsigned short*/;
	var code : int/*unsigned short*/;

} // end of DOMException

native class DOMError {

	__readonly__ var name : string/*DOMString*/;

} // end of DOMError

native class Event {

	function constructor(type : string/*DOMString*/);
	function constructor(type : string/*DOMString*/, eventInitDict : EventInit);

	__readonly__ var type : string/*DOMString*/;
	__readonly__ var target : EventTarget;
	__readonly__ var currentTarget : EventTarget;
	static const     CAPTURING_PHASE : int/*unsigned short*/;
	__readonly__ var CAPTURING_PHASE : int/*unsigned short*/;
	static const     AT_TARGET : int/*unsigned short*/;
	__readonly__ var AT_TARGET : int/*unsigned short*/;
	static const     BUBBLING_PHASE : int/*unsigned short*/;
	__readonly__ var BUBBLING_PHASE : int/*unsigned short*/;
	__readonly__ var eventPhase : int/*unsigned short*/;
	function stopPropagation() : void;
	function stopImmediatePropagation() : void;
	__readonly__ var bubbles : boolean;
	__readonly__ var cancelable : boolean;
	function preventDefault() : void;
	__readonly__ var defaultPrevented : boolean;
	__readonly__ var isTrusted : boolean;
	__readonly__ var timeStamp : number/*DOMTimeStamp*/;
	function initEvent(
		type : string/*DOMString*/,
		bubbles : boolean,
		cancelable : boolean
	) : void;

} // end of Event

native class EventInit {

	var bubbles : boolean;
	var cancelable : boolean;

} // end of EventInit

native class CustomEvent extends Event {

	function constructor(type : string/*DOMString*/);
	function constructor(type : string/*DOMString*/, eventInitDict : CustomEventInit);

	__readonly__ var detail : variant/*any*/;

} // end of CustomEvent

native class CustomEventInit extends EventInit {

	var detail : variant/*any*/;

} // end of CustomEventInit

native __fake__ class EventTarget {

	function addEventListener(
		type : string/*DOMString*/,
		callback : function(:Event):void/*EventListener?*/
	) : void;
	function addEventListener(
		type : string/*DOMString*/,
		callback : function(:Event):void/*EventListener?*/,
		capture : boolean
	) : void;
	function removeEventListener(
		type : string/*DOMString*/,
		callback : function(:Event):void/*EventListener?*/
	) : void;
	function removeEventListener(
		type : string/*DOMString*/,
		callback : function(:Event):void/*EventListener?*/,
		capture : boolean
	) : void;
	function dispatchEvent(event : Event) : boolean;

} // end of EventTarget

native class MutationObserver {

	function constructor(callback : function(:MutationRecord[],:MutationObserver):void/*MutationCallback*/);

	function observe(
		target : Node,
		options : MutationObserverInit
	) : void;
	function disconnect() : void;

} // end of MutationObserver

native class MutationObserverInit {

	var childList : boolean;
	var attributes : boolean;
	var characterData : boolean;
	var subtree : boolean;
	var attributeOldValue : boolean;
	var characterDataOldValue : boolean;
	var attributeFilter : string[]/*DOMString[]*/;

} // end of MutationObserverInit

native class MutationRecord {

	__readonly__ var type : string/*DOMString*/;
	__readonly__ var target : Node;
	__readonly__ var addedNodes : NodeList;
	__readonly__ var removedNodes : NodeList;
	__readonly__ var previousSibling : Node;
	__readonly__ var nextSibling : Node;
	__readonly__ var attributeName : string/*DOMString?*/;
	__readonly__ var attributeNamespace : string/*DOMString?*/;
	__readonly__ var oldValue : string/*DOMString?*/;

} // end of MutationRecord

native class Node extends EventTarget {

	static const     ELEMENT_NODE : int/*unsigned short*/;
	__readonly__ var ELEMENT_NODE : int/*unsigned short*/;
	static const     ATTRIBUTE_NODE : int/*unsigned short*/;
	__readonly__ var ATTRIBUTE_NODE : int/*unsigned short*/;
	// historical
	static const     TEXT_NODE : int/*unsigned short*/;
	__readonly__ var TEXT_NODE : int/*unsigned short*/;
	static const     CDATA_SECTION_NODE : int/*unsigned short*/;
	__readonly__ var CDATA_SECTION_NODE : int/*unsigned short*/;
	// historical
	static const     ENTITY_REFERENCE_NODE : int/*unsigned short*/;
	__readonly__ var ENTITY_REFERENCE_NODE : int/*unsigned short*/;
	// historical
	static const     ENTITY_NODE : int/*unsigned short*/;
	__readonly__ var ENTITY_NODE : int/*unsigned short*/;
	// historical
	static const     PROCESSING_INSTRUCTION_NODE : int/*unsigned short*/;
	__readonly__ var PROCESSING_INSTRUCTION_NODE : int/*unsigned short*/;
	static const     COMMENT_NODE : int/*unsigned short*/;
	__readonly__ var COMMENT_NODE : int/*unsigned short*/;
	static const     DOCUMENT_NODE : int/*unsigned short*/;
	__readonly__ var DOCUMENT_NODE : int/*unsigned short*/;
	static const     DOCUMENT_TYPE_NODE : int/*unsigned short*/;
	__readonly__ var DOCUMENT_TYPE_NODE : int/*unsigned short*/;
	static const     DOCUMENT_FRAGMENT_NODE : int/*unsigned short*/;
	__readonly__ var DOCUMENT_FRAGMENT_NODE : int/*unsigned short*/;
	static const     NOTATION_NODE : int/*unsigned short*/;
	__readonly__ var NOTATION_NODE : int/*unsigned short*/;
	// historical
	__readonly__ var nodeType : int/*unsigned short*/;
	__readonly__ var nodeName : string/*DOMString*/;
	__readonly__ var baseURI : string/*DOMString?*/;
	__readonly__ var ownerDocument : Document;
	__readonly__ var parentNode : Node;
	__readonly__ var parentElement : Element;
	function hasChildNodes() : boolean;
	__readonly__ var childNodes : NodeList;
	__readonly__ var firstChild : Node;
	__readonly__ var lastChild : Node;
	__readonly__ var previousSibling : Node;
	__readonly__ var nextSibling : Node;
	static const     DOCUMENT_POSITION_DISCONNECTED : int/*unsigned short*/;
	__readonly__ var DOCUMENT_POSITION_DISCONNECTED : int/*unsigned short*/;
	static const     DOCUMENT_POSITION_PRECEDING : int/*unsigned short*/;
	__readonly__ var DOCUMENT_POSITION_PRECEDING : int/*unsigned short*/;
	static const     DOCUMENT_POSITION_FOLLOWING : int/*unsigned short*/;
	__readonly__ var DOCUMENT_POSITION_FOLLOWING : int/*unsigned short*/;
	static const     DOCUMENT_POSITION_CONTAINS : int/*unsigned short*/;
	__readonly__ var DOCUMENT_POSITION_CONTAINS : int/*unsigned short*/;
	static const     DOCUMENT_POSITION_CONTAINED_BY : int/*unsigned short*/;
	__readonly__ var DOCUMENT_POSITION_CONTAINED_BY : int/*unsigned short*/;
	static const     DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC : int/*unsigned short*/;
	__readonly__ var DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC : int/*unsigned short*/;
	// historical
	function compareDocumentPosition(
		other : Node
	) : int/*unsigned short*/;
	function contains(other : Node) : boolean;
	var nodeValue : string/*DOMString?*/;
	var textContent : string/*DOMString?*/;
	function insertBefore(node : Node, child : Node) : Node;
	function appendChild(node : Node) : Node;
	function replaceChild(node : Node, child : Node) : Node;
	function removeChild(child : Node) : Node;
	function normalize() : void;
	function cloneNode() : Node;
	function cloneNode(deep : boolean) : Node;
	function isEqualNode(node : Node) : boolean;
	function lookupPrefix(
		namespace : string/*DOMString?*/
	) : string/*DOMString*/;
	function lookupNamespaceURI(
		prefix : string/*DOMString?*/
	) : string/*DOMString*/;
	function isDefaultNamespace(
		namespace : string/*DOMString?*/
	) : boolean;

} // end of Node

native class Document extends Node {

	__readonly__ var implementation : DOMImplementation;
	__readonly__ var URL : string/*DOMString*/;
	__readonly__ var documentURI : string/*DOMString*/;
	__readonly__ var compatMode : string/*DOMString*/;
	__readonly__ var characterSet : string/*DOMString*/;
	__readonly__ var contentType : string/*DOMString*/;
	__readonly__ var doctype : DocumentType;
	__readonly__ var documentElement : Element;
	function getElementsByTagName(
		localName : string/*DOMString*/
	) : HTMLCollection;
	function getElementsByTagNameNS(
		namespace : string/*DOMString?*/,
		localName : string/*DOMString*/
	) : HTMLCollection;
	function getElementsByClassName(
		classNames : string/*DOMString*/
	) : HTMLCollection;
	function getElementById(elementId : string/*DOMString*/) : Element;
	function createElement(localName : string/*DOMString*/) : Element;
	function createElementNS(
		namespace : string/*DOMString?*/,
		qualifiedName : string/*DOMString*/
	) : Element;
	function createDocumentFragment() : DocumentFragment;
	function createTextNode(data : string/*DOMString*/) : Text;
	function createComment(data : string/*DOMString*/) : Comment;
	function createProcessingInstruction(
		target : string/*DOMString*/,
		data : string/*DOMString*/
	) : ProcessingInstruction;
	function importNode(node : Node) : Node;
	function importNode(node : Node, deep : boolean) : Node;
	function adoptNode(node : Node) : Node;
	function createEvent(
		eventInterfaceName : string/*DOMString*/
	) : Event;
	function createRange() : Range;
	function createNodeIterator(root : Node) : NodeIterator;
	function createNodeIterator(
		root : Node,
		whatToShow : int/*unsigned long*/
	) : NodeIterator;
	function createNodeIterator(
		root : Node,
		whatToShow : int/*unsigned long*/,
		filter : NodeFilter
	) : NodeIterator;
	function createTreeWalker(root : Node) : TreeWalker;
	function createTreeWalker(
		root : Node,
		whatToShow : int/*unsigned long*/
	) : TreeWalker;
	function createTreeWalker(
		root : Node,
		whatToShow : int/*unsigned long*/,
		filter : NodeFilter
	) : TreeWalker;
	// NEW
	function prepend(DOMString : Node) : void;
	function append(DOMString : Node) : void;

} // end of Document

native class XMLDocument extends Document {
}

native class DOMImplementation {

	function createDocumentType(
		qualifiedName : string/*DOMString*/,
		publicId : string/*DOMString*/,
		systemId : string/*DOMString*/
	) : DocumentType;
	function createDocument(
		namespace : string/*DOMString?*/,
		qualifiedName : string/*DOMString*/,
		doctype : DocumentType
	) : XMLDocument;
	function createHTMLDocument(title : string/*DOMString*/) : Document;
	function hasFeature(
		feature : string/*DOMString*/,
		version : string/*DOMString*/
	) : boolean;

} // end of DOMImplementation

native class DocumentFragment extends Node {

	// NEW
	function prepend(DOMString : Node) : void;
	function append(DOMString : Node) : void;

} // end of DocumentFragment

native class DocumentType extends Node {

	__readonly__ var name : string/*DOMString*/;
	__readonly__ var publicId : string/*DOMString*/;
	__readonly__ var systemId : string/*DOMString*/;
	// NEW
	function before(DOMString : Node) : void;
	function after(DOMString : Node) : void;
	function replace(DOMString : Node) : void;
	function remove() : void;

} // end of DocumentType

native class Element extends Node {

	__readonly__ var namespaceURI : string/*DOMString?*/;
	__readonly__ var prefix : string/*DOMString?*/;
	__readonly__ var localName : string/*DOMString*/;
	__readonly__ var tagName : string/*DOMString*/;
	var id : string/*DOMString*/;
	var className : string/*DOMString*/;
	__readonly__ var classList : DOMTokenList;
	__readonly__ var attributes : Attr[];
	function getAttribute(
		name : string/*DOMString*/
	) : string/*DOMString?*/;
	function getAttributeNS(
		namespace : string/*DOMString?*/,
		localName : string/*DOMString*/
	) : string/*DOMString?*/;
	function setAttribute(
		name : string/*DOMString*/,
		value : string/*DOMString*/
	) : void;
	function setAttributeNS(
		namespace : string/*DOMString?*/,
		name : string/*DOMString*/,
		value : string/*DOMString*/
	) : void;
	function removeAttribute(name : string/*DOMString*/) : void;
	function removeAttributeNS(
		namespace : string/*DOMString?*/,
		localName : string/*DOMString*/
	) : void;
	function hasAttribute(name : string/*DOMString*/) : boolean;
	function hasAttributeNS(
		namespace : string/*DOMString?*/,
		localName : string/*DOMString*/
	) : boolean;
	function getElementsByTagName(
		localName : string/*DOMString*/
	) : HTMLCollection;
	function getElementsByTagNameNS(
		namespace : string/*DOMString?*/,
		localName : string/*DOMString*/
	) : HTMLCollection;
	function getElementsByClassName(
		classNames : string/*DOMString*/
	) : HTMLCollection;
	__readonly__ var children : HTMLCollection;
	__readonly__ var firstElementChild : Element;
	__readonly__ var lastElementChild : Element;
	__readonly__ var previousElementSibling : Element;
	__readonly__ var nextElementSibling : Element;
	__readonly__ var childElementCount : int/*unsigned long*/;
	// NEW
	function prepend(DOMString : Node) : void;
	function append(DOMString : Node) : void;
	function before(DOMString : Node) : void;
	function after(DOMString : Node) : void;
	function replace(DOMString : Node) : void;
	function remove() : void;

} // end of Element

native class Attr {

	__readonly__ var name : string/*DOMString*/;
	var value : string/*DOMString*/;
	__readonly__ var namespaceURI : string/*DOMString?*/;
	__readonly__ var prefix : string/*DOMString?*/;
	__readonly__ var localName : string/*DOMString*/;

} // end of Attr

native class CharacterData extends Node {

	var data : string/*DOMString*/;
	__readonly__ var length : int/*unsigned long*/;
	function substringData(
		offset : int/*unsigned long*/,
		count : int/*unsigned long*/
	) : string/*DOMString*/;
	function appendData(data : string/*DOMString*/) : void;
	function insertData(
		offset : int/*unsigned long*/,
		data : string/*DOMString*/
	) : void;
	function deleteData(
		offset : int/*unsigned long*/,
		count : int/*unsigned long*/
	) : void;
	function replaceData(
		offset : int/*unsigned long*/,
		count : int/*unsigned long*/,
		data : string/*DOMString*/
	) : void;
	// NEW
	function before(DOMString : Node) : void;
	function after(DOMString : Node) : void;
	function replace(DOMString : Node) : void;
	function remove() : void;

} // end of CharacterData

native class Text extends CharacterData {

	function splitText(offset : int/*unsigned long*/) : Text;
	__readonly__ var wholeText : string/*DOMString*/;

} // end of Text

native class ProcessingInstruction extends CharacterData {

	__readonly__ var target : string/*DOMString*/;

} // end of ProcessingInstruction

native class Comment extends CharacterData {
}

native class Range {

	__readonly__ var startContainer : Node;
	__readonly__ var startOffset : int/*unsigned long*/;
	__readonly__ var endContainer : Node;
	__readonly__ var endOffset : int/*unsigned long*/;
	__readonly__ var collapsed : boolean;
	__readonly__ var commonAncestorContainer : Node;
	function setStart(
		refNode : Node,
		offset : int/*unsigned long*/
	) : void;
	function setEnd(
		refNode : Node,
		offset : int/*unsigned long*/
	) : void;
	function setStartBefore(refNode : Node) : void;
	function setStartAfter(refNode : Node) : void;
	function setEndBefore(refNode : Node) : void;
	function setEndAfter(refNode : Node) : void;
	function collapse(toStart : boolean) : void;
	function selectNode(refNode : Node) : void;
	function selectNodeContents(refNode : Node) : void;
	static const     START_TO_START : int/*unsigned short*/;
	__readonly__ var START_TO_START : int/*unsigned short*/;
	static const     START_TO_END : int/*unsigned short*/;
	__readonly__ var START_TO_END : int/*unsigned short*/;
	static const     END_TO_END : int/*unsigned short*/;
	__readonly__ var END_TO_END : int/*unsigned short*/;
	static const     END_TO_START : int/*unsigned short*/;
	__readonly__ var END_TO_START : int/*unsigned short*/;
	function compareBoundaryPoints(
		how : int/*unsigned short*/,
		sourceRange : Range
	) : int/*short*/;
	function deleteContents() : void;
	function extractContents() : DocumentFragment;
	function cloneContents() : DocumentFragment;
	function insertNode(node : Node) : void;
	function surroundContents(newParent : Node) : void;
	function cloneRange() : Range;
	function detach() : void;
	function isPointInRange(
		node : Node,
		offset : int/*unsigned long*/
	) : boolean;
	function comparePoint(
		node : Node,
		offset : int/*unsigned long*/
	) : int/*short*/;
	function intersectsNode(node : Node) : boolean;

} // end of Range

native class NodeIterator {

	__readonly__ var root : Node;
	__readonly__ var referenceNode : Node;
	__readonly__ var pointerBeforeReferenceNode : boolean;
	__readonly__ var whatToShow : int/*unsigned long*/;
	__readonly__ var filter : NodeFilter;
	function nextNode() : Node;
	function previousNode() : Node;
	function detach() : void;

} // end of NodeIterator

native class TreeWalker {

	__readonly__ var root : Node;
	__readonly__ var whatToShow : int/*unsigned long*/;
	__readonly__ var filter : NodeFilter;
	var currentNode : Node;
	function parentNode() : Node;
	function firstChild() : Node;
	function lastChild() : Node;
	function previousSibling() : Node;
	function nextSibling() : Node;
	function previousNode() : Node;
	function nextNode() : Node;

} // end of TreeWalker

native class NodeFilter {

	// Constants for acceptNode()
	static const     FILTER_ACCEPT : int/*unsigned short*/;
	__readonly__ var FILTER_ACCEPT : int/*unsigned short*/;
	static const     FILTER_REJECT : int/*unsigned short*/;
	__readonly__ var FILTER_REJECT : int/*unsigned short*/;
	static const     FILTER_SKIP : int/*unsigned short*/;
	__readonly__ var FILTER_SKIP : int/*unsigned short*/;
	// Constants for whatToShow
	static const     SHOW_ALL : int/*unsigned long*/;
	__readonly__ var SHOW_ALL : int/*unsigned long*/;
	static const     SHOW_ELEMENT : int/*unsigned long*/;
	__readonly__ var SHOW_ELEMENT : int/*unsigned long*/;
	static const     SHOW_ATTRIBUTE : int/*unsigned long*/;
	__readonly__ var SHOW_ATTRIBUTE : int/*unsigned long*/;
	// historical
	static const     SHOW_TEXT : int/*unsigned long*/;
	__readonly__ var SHOW_TEXT : int/*unsigned long*/;
	static const     SHOW_CDATA_SECTION : int/*unsigned long*/;
	__readonly__ var SHOW_CDATA_SECTION : int/*unsigned long*/;
	// historical
	static const     SHOW_ENTITY_REFERENCE : int/*unsigned long*/;
	__readonly__ var SHOW_ENTITY_REFERENCE : int/*unsigned long*/;
	// historical
	static const     SHOW_ENTITY : int/*unsigned long*/;
	__readonly__ var SHOW_ENTITY : int/*unsigned long*/;
	// historical
	static const     SHOW_PROCESSING_INSTRUCTION : int/*unsigned long*/;
	__readonly__ var SHOW_PROCESSING_INSTRUCTION : int/*unsigned long*/;
	static const     SHOW_COMMENT : int/*unsigned long*/;
	__readonly__ var SHOW_COMMENT : int/*unsigned long*/;
	static const     SHOW_DOCUMENT : int/*unsigned long*/;
	__readonly__ var SHOW_DOCUMENT : int/*unsigned long*/;
	static const     SHOW_DOCUMENT_TYPE : int/*unsigned long*/;
	__readonly__ var SHOW_DOCUMENT_TYPE : int/*unsigned long*/;
	static const     SHOW_DOCUMENT_FRAGMENT : int/*unsigned long*/;
	__readonly__ var SHOW_DOCUMENT_FRAGMENT : int/*unsigned long*/;
	static const     SHOW_NOTATION : int/*unsigned long*/;
	__readonly__ var SHOW_NOTATION : int/*unsigned long*/;
	// historical

	function acceptNode(node : Node) : int/*unsigned short*/;

} // end of NodeFilter

native class NodeList {

	function __native_index_operator__(
		index : int/*unsigned long*/
	) : MayBeUndefined.<Node>;
	function /* getter */ item(
		index : int/*unsigned long*/
	) : MayBeUndefined.<Node>;
	__readonly__ var length : int/*unsigned long*/;

} // end of NodeList

native class HTMLCollection {

	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : MayBeUndefined.<Element>;
	function /* getter */ item(
		index : int/*unsigned long*/
	) : MayBeUndefined.<Element>;
	function __native_index_operator__(
		name : string/*DOMString*/
	) : MayBeUndefined.<Object/*object?*/>;
	function /* getter */ namedItem(
		name : string/*DOMString*/
	) : MayBeUndefined.<Object/*object?*/>;
	// only returns Element

} // end of HTMLCollection

native class DOMStringList {

	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : MayBeUndefined.<string/*DOMString?*/>;
	function /* getter */ item(
		index : int/*unsigned long*/
	) : MayBeUndefined.<string/*DOMString?*/>;
	function contains(string : string/*DOMString*/) : boolean;

} // end of DOMStringList

native class DOMTokenList {

	__readonly__ var length : int/*unsigned long*/;
	function __native_index_operator__(
		index : int/*unsigned long*/
	) : MayBeUndefined.<string/*DOMString?*/>;
	function /* getter */ item(
		index : int/*unsigned long*/
	) : MayBeUndefined.<string/*DOMString?*/>;
	function contains(token : string/*DOMString*/) : boolean;
	function add(token : string/*DOMString*/) : void;
	function remove(token : string/*DOMString*/) : void;
	function toggle(token : string/*DOMString*/) : boolean;

} // end of DOMTokenList

native class DOMSettableTokenList extends DOMTokenList {

	var value : string/*DOMString*/;

} // end of DOMSettableTokenList

/*
end of generated files from:
	http://www.w3.org/TR/dom/
*/

