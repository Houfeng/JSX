#!/usr/bin/env perl
use 5.10.0;
use strict;
use warnings;
use Text::Xslate;
use File::Path qw(mkpath);
use Data::Section::Simple;
use Fatal qw(open close);

mkpath "lib/js/js/browser";

my @specs = (
    ['js/browser/canvas2d.jsx' =>
        # latest editor's draft
        'http://dev.w3.org/html5/2dcontext/',
    ],
    ['js/browser/webgl.jsx' =>
        'https://www.khronos.org/registry/webgl/specs/latest/webgl.idl',
    ],
    ['typedarray.jsx' =>
        'https://www.khronos.org/registry/typedarray/specs/latest/typedarray.idl',
    ],
);

my $HEADER = <<'T';
// THIS FILE IS AUTOMATICALLY GENERATED.
T

my $xslate = Text::Xslate->new(
    path  => [ Data::Section::Simple->new->get_data_section() ],
    type => "text",

    function => {
        idl2jsx => sub {
            my($idl) = @_;
            return scalar(`idl2jsx/idl2jsx.pl '$idl'`);
        },
    },
);

foreach my $spec(@specs) {
    my($file, @idls) = @{$spec};
    say "generate $file from ", join ",", @idls;

    my %param = (
        idls => \@idls,
    );

    my $src = $xslate->render($file, \%param);

    open my($fh), ">", "lib/js/$file";
    print $fh $src;
    close $fh;
}

__DATA__
@@ js/browser/canvas2d.jsx
/**

HTML Canvas 2D Context

Specification:
    http://dev.w3.org/html5/2dcontext/
    http://www.w3.org/TR/2dcontext/
*/

import "js/browser/html.jsx";
import "js/browser/canvas2d.jsx";
import "typedarray.jsx";

: for $idls -> $idl {
:   idl2jsx($idl);
: }

@@ js/browser/webgl.jsx

/**

WebGL - OpenGL ES 2.0 for the Web

Specification:
    http://www.khronos.org/webgl/
    https://www.khronos.org/registry/webgl/specs/latest/
*/

import "js/browser/html.jsx";
import "js/browser/canvas2d.jsx";
import "typedarray.jsx";

: for $idls -> $idl {
:   idl2jsx($idl);
: }

@@ typedarray.jsx

/**

Typed Arrays

Specification and Reference:
    http://www.khronos.org/registry/typedarray/specs/latest/
    https://developer.mozilla.org/en/javascript_typed_arrays/ArrayBuffer
*/

: for $idls -> $idl {
:   idl2jsx($idl);
: }

